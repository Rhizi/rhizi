= Rhizi =

A collaborative editor for organizing, communicating, and analyzing data in graph form.

= Requirements =
* Neo4J DB server
* Python 2.7
* Flask
* Apache Ant

= Use =

== requirements ==
Install [neo4j](http://neo4j.com/download/)

Install [gevent-socketio](https://pypi.python.org/pypi/gevent-socketio/) Or <code> Run pip install gevent-socketio </code>

Install [simplejson](http://undefined.org/python/#simplejson) Or <code> Run pip install simplejson </code>
 - flask uses itsdangerous which uses simplejson
 - the default json converts namedtuples to arrays stripping the names.
 - simplejson converts them to a dictionary, a behavior we rely on.

== Running Rhizi Locally ==
To run Rhizi locally:
For testing locally run neo4j locally on the default 7474 port and then launch run-local.sh:<br><code>./run-local.sh</code>

Or perform the following tasks by hand:
# Update css files from scss sources using <code>make</code>
# Invoke the local deployment Ant target:<br><code>$ cd ./rhizi && ant -f build.ant deploy-local</code>
# Assert Neo4J is running and listening on it's default port
# Run rhizi-server.py:<br><code>$ cd deploy-local && python bin/rz_server.py --config-dir=etc</code>

Command line use documentation can be view with:
:$ python rz_server.py -h

== Installation ==

=== Setup user password file ===
The following works in conjunction with run-local.sh, for real deployment place the resulting htpasswd file in the location matching the config you use.
# put a SECRET_KEY entry in the config file:
  echo SECRET_KEY=mysecret >> res/etc/rhizi-server.conf
# create an initialization file with email/password separated by a comma:
  echo test@example.com,test > res/etc/htpasswd-init-file
# create the htpasswd file:
  python src/server/rz_server.py --init-htpasswd-db --htpasswd-init-file res/etc/htpasswd-init-file

= Development =

To update the css files you need [sass](http://sass-lang.com/)

The build tool is [make](https://www.gnu.org/software/make/)

To rebuild the css files issue make from the top level directory:

 $ make
 
 For dev mode(debbuging, manual file load) use `?debug=1` at end of URL: e.g. `file://rhizifolder/html.index?debug=1`

== Neo4J DB management ==

* Use <code>$ neo4j-shell -file reset-db__single_link.cypher</code> to bring the DB to an empty state, excluding two nodes and a single link.

== Running server tests ==

Test code makes use of Python's unittest - run by invoking them with python,
or by creating a launch configuration in your IDE of choice.

Note: server test-cases do not yet support pre-run DB state validation and are
likely to leave DB side-effects.

